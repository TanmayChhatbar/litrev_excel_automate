{"version":"0.3.0","body":"async function main(workbook: ExcelScript.Workbook) {\n  // Get the selected range.\n  let selectedRange = workbook.getSelectedRange();\n\n  // Get the number of rows and columns in the selected range.\n  let rowCount = selectedRange.getRowCount();\n  let columnCount = selectedRange.getColumnCount();\n\n  // Check if the column count is greater than 1.\n  if (columnCount > 1) {\n    console.error(\"Error: More than one column selected. Please select a single column.\");\n    return; // Exit the function.\n  }\n\n  for (let row = 0; row < rowCount; row++) {\n    let cell = selectedRange.getCell(row, 0);\n    let doi = cell.getValue().toString().trim();\n\n    if (isDoi(doi)) {\n      let doi_url = \"https://api.crossref.org/works/\" + doi;\n\n        // Fetch the JSON data from the CrossRef API.\n        const response = await fetch(doi_url);\n\n        if (!response.ok) {\n          console.error(`Error fetching data for DOI: ${doi}. Status: ${response.status}`);\n          continue;\n        }\n\n      const jsonData: CrossRefResponse = await response.json();\n\n      // Extract the relevant data from the JSON.\n      let authors: object = jsonData.message[\"author\"];\n      if (authors.length > 1) {\n        authorName = authors[0][\"family\"] + \"et al.\";\n      }\n      else {\n        authorName = authors[0][\"family\"];\n      }\n      let title: string = jsonData.message.title[0];\n      let year = jsonData.message[\"published-print\"]?.[\"date-parts\"]?.[0]?.[0] || 'Unknown';\n      let citations = jsonData.message[\"is-referenced-by-count\"] || 0;\n      let pubtype: string = jsonData.message[\"type\"];\n      let publisher = jsonData.message.publisher || 'Unknown';\n      \n      // Populate the cells in the row with the data.\n      data = [[authorName, title, year, citations, pubtype, publisher]];\n      rowRange = workbook.getActiveWorksheet().getRangeByIndexes(cell.getRowIndex(), cell.getColumnIndex()+1, 1, data[0].length)\n      rowRange.setValues(data);\n      let doi_hyperlink: ExcelScript.RangeHyperlink = {\n        address: doi_url,\n        textToDisplay: doi\n      }\n      cell.setHyperlink(doi_hyperlink);\n    } else {\n      console.log(`No DOI found in row ${row + 1}`);\n    }\n  }\n}\n\nfunction isDoi(doi: string): boolean {\n  // Check if DOI starts with \"10\" and contains a \"/\"\n  if (doi.startsWith(\"10\") && doi.includes(\"/\")) {\n    return true;\n  }\n  return false;\n}\n\ninterface CrossRefResponse {\n  message: {\n    'published-print'?: {\n      'date-parts'?: number[][];\n    };\n    'is-referenced-by-count'?: number;\n    publisher?: string;\n  };\n}","description":"","noCodeMetadata":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}